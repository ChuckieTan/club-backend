<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.club.mapper.MessageReadMapper">
  <resultMap id="BaseResultMap" type="com.example.club.model.MessageRead">
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <id column="message_id" jdbcType="INTEGER" property="messageId" />
    <result column="read_time" jdbcType="TIMESTAMP" property="readTime" />
  </resultMap>
  <sql id="Base_Column_List">
    user_id
    , message_id, read_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="com.example.club.model.MessageReadKey" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from message_read
    where user_id = #{userId,jdbcType=INTEGER}
    and message_id = #{messageId,jdbcType=INTEGER}
  </select>
  <select id="selectByUserId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from message_read
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.example.club.model.MessageReadKey">
    delete
    from message_read
    where user_id = #{userId,jdbcType=INTEGER}
      and message_id = #{messageId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.club.model.MessageRead">
    insert into message_read (user_id, message_id, read_time)
    values (#{userId,jdbcType=INTEGER}, #{messageId,jdbcType=INTEGER}, #{readTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.example.club.model.MessageRead">
    insert into message_read
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="messageId != null">
        message_id,
      </if>
      <if test="readTime != null">
        read_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="messageId != null">
        #{messageId,jdbcType=INTEGER},
      </if>
      <if test="readTime != null">
        #{readTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.club.model.MessageRead">
    update message_read
    <set>
      <if test="readTime != null">
        read_time = #{readTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
    and message_id = #{messageId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.club.model.MessageRead">
    update message_read
    set read_time = #{readTime,jdbcType=TIMESTAMP}
    where user_id = #{userId,jdbcType=INTEGER}
      and message_id = #{messageId,jdbcType=INTEGER}
  </update>
  <delete id="deleteByMessageId" parameterType="java.lang.Integer">
    delete
    from message_read
    where message_id = #{messageId,jdbcType=INTEGER}
  </delete>
</mapper>